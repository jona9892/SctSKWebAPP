@model SctJSKClient.ViewModels.PollViewModel

@section Scripts{
    <script>
        jQuery.fn.extend({
            live: function (event, callback) {
                if (this.selector) {
                    jQuery(document).on(event, this.selector, callback);
                }
            }
        });

        $('#addItem').click(function () {
            $.ajax({
                url: this.href,
                cache: false,
                success: function (html) {
                    $('#pollOptionRows').append(html);
                }
            });
            return false;
        });

        $('a.deleteRow').live('click', function () {
            $(this).parents('div.pollOptionRow:first').remove();
            return false;
        });

    </script>

}
<style>
    #addItem {
        color: white;
        text-decoration: none;
    }

    #addButton {
        margin-top: 2%;
        margin-left: 2%;
    }
</style>

<div class="container">
    <div class="row">
        <div class="well well-sm">
            <h3><i class="glyphicon glyphicon-tasks"></i> Afstemning</h3>
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Poll.Question, new { htmlAttributes = new { @class = "form-control", placeholder = "Spørgsmål" } })
                            @Html.ValidationMessageFor(model => model.Poll.Question, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        
                        <div class="col-md-10">
                            @Html.LabelFor(model => model.Poll.Active)
                            @Html.EditorFor(model => model.Poll.Active, new { htmlAttributes = new { @class = "form-control"} })
                            @Html.ValidationMessageFor(model => model.Poll.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group" style="margin-left:1%;">
                        <div id="pollOptionRows">
                            @foreach (var item in Model.options)
                            {
                                @Html.Partial("PollOptionRow", item);
                            }
                        </div>
                        <button type="button" class="btn btn-primary" id="addButton">
                            @Html.ActionLink("Tilføj", "BlankPollOptionRow", null, new { id = "addItem" })
                        </button>
                    </div>

                </div>
                <div class="row" style="max-width:25%; margin-left: 0%;">
                    <input type="submit" value="Tilføj" class="btn btn-default btn-primary" style="width:100%;" />
                    <a href="@Url.Action("Index", "Poll")" class="btn btn-danger btn-block">Tilbage</a>
                </div>
            }
        </div>
    </div>
</div>